/**
 * IntegratorAPI
 * Forgiva Integrator API containing whole operations between Forgiva SuperClient and Integrator server traffic. It can be used by any 3rd party clients.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: root@sceptive.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Application model module.
 * @module model/Application
 * @version 1.0
 */
class Application {
    /**
     * Constructs a new <code>Application</code>.
     * @alias module:model/Application
     */
    constructor() { 
        
        Application.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Application</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Application} obj Optional instance to populate.
     * @return {module:model/Application} The populated <code>Application</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Application();

            if (data.hasOwnProperty('hostId')) {
                obj['hostId'] = ApiClient.convertToType(data['hostId'], 'Number');
            }
            if (data.hasOwnProperty('applicationId')) {
                obj['applicationId'] = ApiClient.convertToType(data['applicationId'], 'Number');
            }
            if (data.hasOwnProperty('applicationName')) {
                obj['applicationName'] = ApiClient.convertToType(data['applicationName'], 'String');
            }
            if (data.hasOwnProperty('version')) {
                obj['version'] = ApiClient.convertToType(data['version'], 'String');
            }
            if (data.hasOwnProperty('portRunning')) {
                obj['portRunning'] = ApiClient.convertToType(data['portRunning'], 'String');
            }
            if (data.hasOwnProperty('loginPageURL')) {
                obj['loginPageURL'] = ApiClient.convertToType(data['loginPageURL'], 'String');
            }
            if (data.hasOwnProperty('homePageURL')) {
                obj['homePageURL'] = ApiClient.convertToType(data['homePageURL'], 'String');
            }
            if (data.hasOwnProperty('monitoringFingerprint')) {
                obj['monitoringFingerprint'] = ApiClient.convertToType(data['monitoringFingerprint'], 'String');
            }
            if (data.hasOwnProperty('reserved1')) {
                obj['reserved1'] = ApiClient.convertToType(data['reserved1'], 'String');
            }
            if (data.hasOwnProperty('reserved2')) {
                obj['reserved2'] = ApiClient.convertToType(data['reserved2'], 'String');
            }
            if (data.hasOwnProperty('reserved3')) {
                obj['reserved3'] = ApiClient.convertToType(data['reserved3'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {Number} hostId
 */
Application.prototype['hostId'] = undefined;

/**
 * @member {Number} applicationId
 */
Application.prototype['applicationId'] = undefined;

/**
 * @member {String} applicationName
 */
Application.prototype['applicationName'] = undefined;

/**
 * @member {String} version
 */
Application.prototype['version'] = undefined;

/**
 * @member {String} portRunning
 */
Application.prototype['portRunning'] = undefined;

/**
 * @member {String} loginPageURL
 */
Application.prototype['loginPageURL'] = undefined;

/**
 * @member {String} homePageURL
 */
Application.prototype['homePageURL'] = undefined;

/**
 * @member {String} monitoringFingerprint
 */
Application.prototype['monitoringFingerprint'] = undefined;

/**
 * @member {String} reserved1
 */
Application.prototype['reserved1'] = undefined;

/**
 * @member {String} reserved2
 */
Application.prototype['reserved2'] = undefined;

/**
 * @member {String} reserved3
 */
Application.prototype['reserved3'] = undefined;






export default Application;

