/**
 * IntegratorAPI
 * Forgiva Integrator API containing whole operations between Forgiva SuperClient and Integrator server traffic. It  can be used by any 3rd party clients. 
 *
 * The version of the OpenAPI document: 1.0
 * Contact: root@sceptive.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import OperationResult from '../model/OperationResult';
import PostAdminApplicationAddRequest from '../model/PostAdminApplicationAddRequest';
import PostAdminApplicationRemoveRequest from '../model/PostAdminApplicationRemoveRequest';
import PostAdminApplicationUpdateRequest from '../model/PostAdminApplicationUpdateRequest';
import PostAdminApplicationsRequest from '../model/PostAdminApplicationsRequest';
import PostAdminApplicationsResponse from '../model/PostAdminApplicationsResponse';
import PostAdminHostAddRequest from '../model/PostAdminHostAddRequest';
import PostAdminHostRemoveRequest from '../model/PostAdminHostRemoveRequest';
import PostAdminHostUpdateRequest from '../model/PostAdminHostUpdateRequest';
import PostAdminHostsRequest from '../model/PostAdminHostsRequest';
import PostAdminHostsResponse from '../model/PostAdminHostsResponse';
import PostAdminReportsRequest from '../model/PostAdminReportsRequest';
import PostAdminReportsResponse from '../model/PostAdminReportsResponse';
import PostAdminResourceusageRequest from '../model/PostAdminResourceusageRequest';
import PostAdminResourceusageResponse from '../model/PostAdminResourceusageResponse';
import PostAdminSysteminformationRequest from '../model/PostAdminSysteminformationRequest';
import PostAdminSysteminformationResponse from '../model/PostAdminSysteminformationResponse';
import PostAdminUserAddRequest from '../model/PostAdminUserAddRequest';
import PostAdminUserByusergroupRequest from '../model/PostAdminUserByusergroupRequest';
import PostAdminUserByusergroupResponse from '../model/PostAdminUserByusergroupResponse';
import PostAdminUserRemoveRequest from '../model/PostAdminUserRemoveRequest';
import PostAdminUserUpdateRequest from '../model/PostAdminUserUpdateRequest';
import PostAdminUsergroupAddRequest from '../model/PostAdminUsergroupAddRequest';
import PostAdminUsergroupRemoveRequest from '../model/PostAdminUsergroupRemoveRequest';
import PostAdminUsergroupUpdateRequest from '../model/PostAdminUsergroupUpdateRequest';
import PostAdminUsergroupsRequest from '../model/PostAdminUsergroupsRequest';
import PostAdminUsergroupsResponse from '../model/PostAdminUsergroupsResponse';

/**
* AdministratorOperations service.
* @module api/AdministratorOperationsApi
* @version 1.0
*/
export default class AdministratorOperationsApi {

    /**
    * Constructs a new AdministratorOperationsApi. 
    * @alias module:api/AdministratorOperationsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the postAdminApplicationAdd operation.
     * @callback module:api/AdministratorOperationsApi~postAdminApplicationAddCallback
     * @param {String} error Error message, if any.
     * @param {module:model/OperationResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Adding a new application
     * Adds a new application described within the post body.
     * @param {Object} opts Optional parameters
     * @param {module:model/PostAdminApplicationAddRequest} opts.postAdminApplicationAddRequest 
     * @param {module:api/AdministratorOperationsApi~postAdminApplicationAddCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/OperationResult}
     */
    postAdminApplicationAdd(opts, callback) {
      opts = opts || {};
      let postBody = opts['postAdminApplicationAddRequest'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = OperationResult;
      return this.apiClient.callApi(
        '/admin/application/add', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the postAdminApplicationRemove operation.
     * @callback module:api/AdministratorOperationsApi~postAdminApplicationRemoveCallback
     * @param {String} error Error message, if any.
     * @param {module:model/OperationResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Removing application
     * Removes application given in the body with application id.
     * @param {Object} opts Optional parameters
     * @param {module:model/PostAdminApplicationRemoveRequest} opts.postAdminApplicationRemoveRequest 
     * @param {module:api/AdministratorOperationsApi~postAdminApplicationRemoveCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/OperationResult}
     */
    postAdminApplicationRemove(opts, callback) {
      opts = opts || {};
      let postBody = opts['postAdminApplicationRemoveRequest'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = OperationResult;
      return this.apiClient.callApi(
        '/admin/application/remove', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the postAdminApplicationUpdate operation.
     * @callback module:api/AdministratorOperationsApi~postAdminApplicationUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/OperationResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updating application
     * Updates application specified within the body tagged with application id.
     * @param {Object} opts Optional parameters
     * @param {module:model/PostAdminApplicationUpdateRequest} opts.postAdminApplicationUpdateRequest 
     * @param {module:api/AdministratorOperationsApi~postAdminApplicationUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/OperationResult}
     */
    postAdminApplicationUpdate(opts, callback) {
      opts = opts || {};
      let postBody = opts['postAdminApplicationUpdateRequest'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = OperationResult;
      return this.apiClient.callApi(
        '/admin/application/update', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the postAdminApplications operation.
     * @callback module:api/AdministratorOperationsApi~postAdminApplicationsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PostAdminApplicationsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Getting applications
     * Return applications.
     * @param {Object} opts Optional parameters
     * @param {module:model/PostAdminApplicationsRequest} opts.postAdminApplicationsRequest 
     * @param {module:api/AdministratorOperationsApi~postAdminApplicationsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PostAdminApplicationsResponse}
     */
    postAdminApplications(opts, callback) {
      opts = opts || {};
      let postBody = opts['postAdminApplicationsRequest'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = PostAdminApplicationsResponse;
      return this.apiClient.callApi(
        '/admin/applications/by_host', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the postAdminHostAdd operation.
     * @callback module:api/AdministratorOperationsApi~postAdminHostAddCallback
     * @param {String} error Error message, if any.
     * @param {module:model/OperationResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Adding host
     * Adds host specified within the body
     * @param {Object} opts Optional parameters
     * @param {module:model/PostAdminHostAddRequest} opts.postAdminHostAddRequest 
     * @param {module:api/AdministratorOperationsApi~postAdminHostAddCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/OperationResult}
     */
    postAdminHostAdd(opts, callback) {
      opts = opts || {};
      let postBody = opts['postAdminHostAddRequest'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = OperationResult;
      return this.apiClient.callApi(
        '/admin/host/add', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the postAdminHostRemove operation.
     * @callback module:api/AdministratorOperationsApi~postAdminHostRemoveCallback
     * @param {String} error Error message, if any.
     * @param {module:model/OperationResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Removing host
     * Removes host specified with host id.
     * @param {Object} opts Optional parameters
     * @param {module:model/PostAdminHostRemoveRequest} opts.postAdminHostRemoveRequest 
     * @param {module:api/AdministratorOperationsApi~postAdminHostRemoveCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/OperationResult}
     */
    postAdminHostRemove(opts, callback) {
      opts = opts || {};
      let postBody = opts['postAdminHostRemoveRequest'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = OperationResult;
      return this.apiClient.callApi(
        '/admin/host/remove', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the postAdminHostUpdate operation.
     * @callback module:api/AdministratorOperationsApi~postAdminHostUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/OperationResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updating host
     * Updates host specified within the body tagged with host id.
     * @param {Object} opts Optional parameters
     * @param {module:model/PostAdminHostUpdateRequest} opts.postAdminHostUpdateRequest 
     * @param {module:api/AdministratorOperationsApi~postAdminHostUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/OperationResult}
     */
    postAdminHostUpdate(opts, callback) {
      opts = opts || {};
      let postBody = opts['postAdminHostUpdateRequest'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = OperationResult;
      return this.apiClient.callApi(
        '/admin/host/update', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the postAdminHosts operation.
     * @callback module:api/AdministratorOperationsApi~postAdminHostsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PostAdminHostsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Getting hosts
     * Return hosts.
     * @param {Object} opts Optional parameters
     * @param {module:model/PostAdminHostsRequest} opts.postAdminHostsRequest 
     * @param {module:api/AdministratorOperationsApi~postAdminHostsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PostAdminHostsResponse}
     */
    postAdminHosts(opts, callback) {
      opts = opts || {};
      let postBody = opts['postAdminHostsRequest'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = PostAdminHostsResponse;
      return this.apiClient.callApi(
        '/admin/hosts', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the postAdminReports operation.
     * @callback module:api/AdministratorOperationsApi~postAdminReportsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PostAdminReportsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Listing available reports
     * @param {Object} opts Optional parameters
     * @param {module:model/PostAdminReportsRequest} opts.postAdminReportsRequest 
     * @param {module:api/AdministratorOperationsApi~postAdminReportsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PostAdminReportsResponse}
     */
    postAdminReports(opts, callback) {
      opts = opts || {};
      let postBody = opts['postAdminReportsRequest'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = PostAdminReportsResponse;
      return this.apiClient.callApi(
        '/admin/reports', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the postAdminResourceusage operation.
     * @callback module:api/AdministratorOperationsApi~postAdminResourceusageCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PostAdminResourceusageResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Getting resource usage data
     * Returns resource usage data on the fly
     * @param {Object} opts Optional parameters
     * @param {module:model/PostAdminResourceusageRequest} opts.postAdminResourceusageRequest 
     * @param {module:api/AdministratorOperationsApi~postAdminResourceusageCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PostAdminResourceusageResponse}
     */
    postAdminResourceusage(opts, callback) {
      opts = opts || {};
      let postBody = opts['postAdminResourceusageRequest'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = PostAdminResourceusageResponse;
      return this.apiClient.callApi(
        '/admin/resource_usage', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the postAdminSysteminformation operation.
     * @callback module:api/AdministratorOperationsApi~postAdminSysteminformationCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PostAdminSysteminformationResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Getting server system information
     * Returns system information data
     * @param {Object} opts Optional parameters
     * @param {module:model/PostAdminSysteminformationRequest} opts.postAdminSysteminformationRequest 
     * @param {module:api/AdministratorOperationsApi~postAdminSysteminformationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PostAdminSysteminformationResponse}
     */
    postAdminSysteminformation(opts, callback) {
      opts = opts || {};
      let postBody = opts['postAdminSysteminformationRequest'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = PostAdminSysteminformationResponse;
      return this.apiClient.callApi(
        '/admin/system_information', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the postAdminUserAdd operation.
     * @callback module:api/AdministratorOperationsApi~postAdminUserAddCallback
     * @param {String} error Error message, if any.
     * @param {module:model/OperationResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Adding a new user
     * Adds a new user described within the post body.
     * @param {Object} opts Optional parameters
     * @param {module:model/PostAdminUserAddRequest} opts.postAdminUserAddRequest 
     * @param {module:api/AdministratorOperationsApi~postAdminUserAddCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/OperationResult}
     */
    postAdminUserAdd(opts, callback) {
      opts = opts || {};
      let postBody = opts['postAdminUserAddRequest'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = OperationResult;
      return this.apiClient.callApi(
        '/admin/user/add', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the postAdminUserByusergroup operation.
     * @callback module:api/AdministratorOperationsApi~postAdminUserByusergroupCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PostAdminUserByusergroupResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Getting users by user group id
     * Returns user data by group id.
     * @param {Object} opts Optional parameters
     * @param {module:model/PostAdminUserByusergroupRequest} opts.postAdminUserByusergroupRequest 
     * @param {module:api/AdministratorOperationsApi~postAdminUserByusergroupCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PostAdminUserByusergroupResponse}
     */
    postAdminUserByusergroup(opts, callback) {
      opts = opts || {};
      let postBody = opts['postAdminUserByusergroupRequest'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = PostAdminUserByusergroupResponse;
      return this.apiClient.callApi(
        '/admin/user/by_user_group', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the postAdminUserRemove operation.
     * @callback module:api/AdministratorOperationsApi~postAdminUserRemoveCallback
     * @param {String} error Error message, if any.
     * @param {module:model/OperationResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Removing user
     * Removes user given in the body with user id.
     * @param {Object} opts Optional parameters
     * @param {module:model/PostAdminUserRemoveRequest} opts.postAdminUserRemoveRequest 
     * @param {module:api/AdministratorOperationsApi~postAdminUserRemoveCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/OperationResult}
     */
    postAdminUserRemove(opts, callback) {
      opts = opts || {};
      let postBody = opts['postAdminUserRemoveRequest'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = OperationResult;
      return this.apiClient.callApi(
        '/admin/user/remove', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the postAdminUserUpdate operation.
     * @callback module:api/AdministratorOperationsApi~postAdminUserUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/OperationResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updating user
     * @param {Object} opts Optional parameters
     * @param {module:model/PostAdminUserUpdateRequest} opts.postAdminUserUpdateRequest 
     * @param {module:api/AdministratorOperationsApi~postAdminUserUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/OperationResult}
     */
    postAdminUserUpdate(opts, callback) {
      opts = opts || {};
      let postBody = opts['postAdminUserUpdateRequest'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = OperationResult;
      return this.apiClient.callApi(
        '/admin/user/update', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the postAdminUsergroupAdd operation.
     * @callback module:api/AdministratorOperationsApi~postAdminUsergroupAddCallback
     * @param {String} error Error message, if any.
     * @param {module:model/OperationResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Adding user group
     * Adds group specified within the body
     * @param {Object} opts Optional parameters
     * @param {module:model/PostAdminUsergroupAddRequest} opts.postAdminUsergroupAddRequest 
     * @param {module:api/AdministratorOperationsApi~postAdminUsergroupAddCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/OperationResult}
     */
    postAdminUsergroupAdd(opts, callback) {
      opts = opts || {};
      let postBody = opts['postAdminUsergroupAddRequest'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = OperationResult;
      return this.apiClient.callApi(
        '/admin/user_group/add', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the postAdminUsergroupRemove operation.
     * @callback module:api/AdministratorOperationsApi~postAdminUsergroupRemoveCallback
     * @param {String} error Error message, if any.
     * @param {module:model/OperationResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Removing user group
     * Removes user group specified with group id.
     * @param {Object} opts Optional parameters
     * @param {module:model/PostAdminUsergroupRemoveRequest} opts.postAdminUsergroupRemoveRequest 
     * @param {module:api/AdministratorOperationsApi~postAdminUsergroupRemoveCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/OperationResult}
     */
    postAdminUsergroupRemove(opts, callback) {
      opts = opts || {};
      let postBody = opts['postAdminUsergroupRemoveRequest'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = OperationResult;
      return this.apiClient.callApi(
        '/admin/user_group/remove', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the postAdminUsergroupUpdate operation.
     * @callback module:api/AdministratorOperationsApi~postAdminUsergroupUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/OperationResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updating user group
     * Updates user group specified within the body tagged with group id.
     * @param {Object} opts Optional parameters
     * @param {module:model/PostAdminUsergroupUpdateRequest} opts.postAdminUsergroupUpdateRequest 
     * @param {module:api/AdministratorOperationsApi~postAdminUsergroupUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/OperationResult}
     */
    postAdminUsergroupUpdate(opts, callback) {
      opts = opts || {};
      let postBody = opts['postAdminUsergroupUpdateRequest'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = OperationResult;
      return this.apiClient.callApi(
        '/admin/user_group/update', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the postAdminUsergroups operation.
     * @callback module:api/AdministratorOperationsApi~postAdminUsergroupsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PostAdminUsergroupsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Getting user groups
     * Return user groups.
     * @param {Object} opts Optional parameters
     * @param {module:model/PostAdminUsergroupsRequest} opts.postAdminUsergroupsRequest 
     * @param {module:api/AdministratorOperationsApi~postAdminUsergroupsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PostAdminUsergroupsResponse}
     */
    postAdminUsergroups(opts, callback) {
      opts = opts || {};
      let postBody = opts['postAdminUsergroupsRequest'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = PostAdminUsergroupsResponse;
      return this.apiClient.callApi(
        '/admin/user_groups', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
